spring.application.name=projetcompain


eureka.instance.hostname=m2.systeo.tn
eureka.instance.prefer-ip-address=false

spring.datasource.url=jdbc:mysql://localhost:3306/CompanyClt?createDatabaseIfNotExist=true
spring.datasource.username=mariam
spring.datasource.password=1234
spring.jpa.show-sql=true
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

spring.cloud.config.enabled=false
server.port=8082
# Fichier de logs (cr√©√© automatiquement dans le dossier /logs/)
logging.file.name=logs/application.log

# Niveau de log global (INFO, DEBUG, ERROR...)
logging.level.root=INFO

# Format des logs (exemple clair)
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
# Activer les endpoints Actuator
management.endpoints.web.exposure.include=health,metrics,prometheus
# Activer tous les endpoints n√©cessaires
management.endpoints.web.exposure.include=*

# Autoriser l'acc√®s sans authentification
management.endpoints.web.cors.allowed-origins=*
management.endpoints.web.cors.allowed-methods=*

# Configurer le hostname pour Eureka
eureka.instance.metadata-map.prometheus.scrape=true
eureka.instance.metadata-map.prometheus.path=/actuator/prometheus
eureka.instance.metadata-map.prometheus.port=8082
# Tags pour les m√©triques
management.metrics.tags.application=${spring.application.name}
management.metrics.tags.instance=${random.value}

# Configurer les m√©triques HTTP
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles.http.server.requests=0.5,0.75,0.95,0.99
eureka.client.service-url.defaultZone=https://eureka.systeo.tn/eureka/
# Dans PROJETCOMPAIN application.properties
# Activer Swagger
# Swagger Configuration
springdoc.api-docs.enabled=true
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.operationsSorter=alpha
springdoc.show-actuator=true

# Activer la documentation pour les API Gateway
springdoc.use-management-port=false
# üîπ LOGGING pour Debug
logging.level.org.springframework.cloud.gateway=DEBUG


# üîπ CONFIGURATION DES ENDPOINTS KEYCLOAK
#spring.security.oauth2.client.provider.keycloak.issuer-uri=https://key.systeo.tn/realms/projectPFE
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://esmm.systeo.tn/realms/projectPFE/protocol/openid-connect/certs

# Activation JWT
#spring.security.oauth2.resourceserver.jwt.enabled=true
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://esmm.systeo.tn/realms/projectPFE

spring.security.oauth2.resourceserver.jwt.audiences=app-projectPFE
#cors.enabled=false
keycloak.client-id=app-projectPFE
keycloak.client-secret=HMDy1f0sVsSPzELSHMPS418S7qUEELFr
# D√©sactive la s√©curit√© JWT
spring.security.oauth2.resourceserver.jwt.enabled=false
# Routes pour les API docs des microservices
spring.cloud.gateway.routes[0].id=swagger-projetcompain
spring.cloud.gateway.routes[0].uri=lb://PROJETCOMPAIN
spring.cloud.gateway.routes[0].predicates[0]=Path=/projetcompain/v3/api-docs
spring.cloud.gateway.routes[0].filters[0]=RewritePath=/projetcompain/(?<segment>.*), /$\{segment}